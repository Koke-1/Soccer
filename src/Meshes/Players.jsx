/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef,useEffect,useState, useContext } from "react";
import { useGLTF } from "@react-three/drei";
import { useSpring,animated} from "@react-spring/three"
import {Shoot} from "../App"

export default function Model(props) {
  const { nodes, materials } = useGLTF("/Soccer/Players.glb");
  const {setLeft,setCenter,setRight,Left,Center,Right,AllButtons} = useContext(Shoot)
  const [ShootA, setShootA] = useState(false)
  useEffect(() => {
    if (Left || Center || Right) {
      setShootA(true)
      setTimeout(()=>{
        setShootA(false)
        setLeft(false)
        setCenter(false)
        setRight(false)    
      },7500)
    } 
    console.log("Player");
  }, [Left, Center, Right]  );
  
  if (ShootA) {
    AllButtons.current.style.opacity = 0
  } else {
    AllButtons.current.style.opacity = 1
  }

  const {rotation,position,leftleg,rightleg,leftarm,rightarm} = useSpring({
    from:{
        rotation:[0,1,0],
        position:[-9,-.3,-2],
        leftleg:[0,0,0],
        rightleg:[0,0,0],
        leftarm:[0,0,0],
        rightarm:[0,0,0],},
    to:[
      {rotation:[0,1,0],
       position:[-9,-.3,-2],
       leftleg:[-1,0,0],
       rightleg:[1,0,0],
       leftarm:[-.5,0,0],
       rightarm:[.5,0,0]},

      {rotation:[0,1,0],
       position:[-8.5,-.3,-1.66],
       leftleg:[1,0,0],
       rightleg:[-1,0,0],
       leftarm:[.5,0,0],
       rightarm:[-.5,0,0] },

      {rotation:[0,1,0],
       position:[-8,-.3,-1.33] ,
       leftleg:[-1,0,0],
       rightleg:[1,0,0],
       leftarm:[-.5,0,0],
       rightarm:[.5,0,0]},

      {rotation:[0,1,0],
       position:[-7,-.3,-1],
       leftleg:[1,0,0],
       rightleg:[-1,0,0],
       leftarm:[.5,0,0],
       rightarm:[-.5,0,0]},

      {rotation:[0,1,0],
       position:[-6,-.3,-.45],
       leftleg:[-1.5,0,0],
       rightleg:[1,0,0],
       leftarm:[-.5,0,0],
       rightarm:[.5,0,0]},

      {rotation:[0,1,0] ,
       position:[-5.5,-.3,-.3],
       leftleg:[1,0,0] ,
       rightleg:[-.5,0,0],
       leftarm:[.5,0,0],
       rightarm:[-.5,0,0]}],
      config:{
        duration:1000,
      },
  })
  return (
    <animated.group position={ShootA ? position : [-9,-.3,-2]} rotation={ ShootA ? rotation : [0,1,0]} scale={[.2,.2,.2]}  {...props} dispose={null}>
      <group
        name="Torso"
        position={[0.681, 5.794, 0]}
        scale={[1.26, 1.528, 0.688]}
      >
        <mesh
          name="Cube003"
          castShadow
          receiveShadow
          geometry={nodes.Cube003.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          name="Cube003_1"
          castShadow
          receiveShadow
          geometry={nodes.Cube003_1.geometry}
          material={materials["Material.003"]}
        />
      </group>
      <animated.group
        name="Left_Leg001"
        position={[-0.942, 7.034, -0.045]}
        scale={[0.379, 0.29, 0.41]}
        rotation={ShootA ?  leftarm : [0,0,0]}
      >
        <mesh
          name="Cube006"
          castShadow
          receiveShadow
          geometry={nodes.Cube006.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          name="Cube006_1"
          castShadow
          receiveShadow
          geometry={nodes.Cube006_1.geometry}
          material={materials["Material.003"]}
        />
      </animated.group>
      <animated.group
        name="Right_Leg001"
        position={[2.322, 7.034, -0.045]}
        scale={[0.379, 0.29, 0.41]}
        rotation={ShootA ?  rightarm : [0,0,0]}
      >
        <mesh
          name="Cube007"
          castShadow
          receiveShadow
          geometry={nodes.Cube007.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          name="Cube007_1"
          castShadow
          receiveShadow
          geometry={nodes.Cube007_1.geometry}
          material={materials["Material.003"]}
        />
      </animated.group>
      <animated.group
        name="Left_Leg"
        position={[0.681, 3.75, 0]}
        scale={[1.279, 0.544, 0.579]}
        rotation={ShootA ?  leftleg : [0,0,0]}
      >
        <mesh
          name="Cube008"
          castShadow
          receiveShadow
          geometry={nodes.Cube008.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          name="Cube008_1"
          castShadow
          receiveShadow
          geometry={nodes.Cube008_1.geometry}
          material={materials["Material.003"]}
        />
      </animated.group>
      <animated.group
        name="Right_Leg"
        position={[0.681, 3.75, 0]}
        scale={[1.279, 0.544, 0.579]}
        rotation={ShootA ?  rightleg : [0,0,0]}
      >
        <mesh
          name="Cube009"
          castShadow
          receiveShadow
          geometry={nodes.Cube009.geometry}
          material={materials["Material.003"]}
        />
        <mesh
          name="Cube009_1"
          castShadow
          receiveShadow
          geometry={nodes.Cube009_1.geometry}
          material={materials["Material.002"]}
        />
      </animated.group>
      <mesh
        name="Head"
        castShadow
        receiveShadow
        geometry={nodes.Head.geometry}
        material={materials["Material.002"]}
        position={[0.681, 7.321, 0]}
        scale={[0.607, 1.046, 0.533]}
      />
    </animated.group>
  );
}

useGLTF.preload("/RedPlayer.glb");
